//RDCAGraph.js

var sizeG = 260

var svgnew = d3.select("body")
                .append("svg")
                .attr("id","testsvg")
                .attr("xmlns","http://www.w3.org/2000/svg")
                .attr("width",widthC).attr("height",widthC)
                .style("background-color","white")
                .style("position","relative")
                .style("top",widthC+300+"px").attr("display","none")
//GRAPH KFMAP
var Graph = d3.selectAll("#TestGUIRight").append("div").attr("class","GraphWrap").append("div")
            var x = d3.scaleLinear()
                    .domain(kRate)
                    .range([0,sizeG - 5])
            var y = d3.scaleLinear()
                    .domain(fRate)
                    .range([sizeG - 5,0])
            Graph.attr("class","NewGraph")
                .style("background-color","rgb("+colorGUIBackground+")")
                .style("width", sizeG + "px") 
                .style("height", sizeG + "px")
                .style("border-style"," solid")
                .style("border-width","0.2px")
                .style("border-color","white")
                .style("position","relative")
                .style("top","0%")
                .style("padding","5px")
            var Axes = Graph.append("svg")
                .attr("width",  sizeG + "px")
                .attr("height", sizeG + "px") 
            Axes.append("g")
                .attr("class","kfgraph")
                .attr("transform", "translate(0,"+sizeG+")")
                .call(d3.axisTop(x))
                .attr("font-size","5px")
            Axes.append("g")
                .attr("class","kfgraph")
                .attr("transform", "translate(0,0)")
                .call(d3.axisRight(y))   
            d3.selectAll(".kfgraph")
                .selectAll(".tick")
                .select("text")
                .attr("font-size","5px")
                .attr("fill","white")
            d3.selectAll(".kfgraph")
                .selectAll(".tick")
                .select("line")
                .attr("stroke","white")
                .attr("stroke-width","0.2px")
d3.selectAll(".GraphWrap")
        .style("position","relative")
        .style("display","flex")
        .style("width","300px")
        .style("height","300px")
        .style("background-color","rgb("+colorGUIBackground+")")
        .style("justify-content","center")
        .style("align-items","center")
        .style("order","2")
Axes.on("mousemove", function(){
            let pos = d3.mouse(this);
            d3.selectAll("#linija").remove();
            d3.selectAll(".kordinate").remove();
            d3.select(this)
                    .append("line")
                    .attr("id","linija")
                    .style("stroke", "white")
                    .style("stroke-width", 0.2)
                    .attr("x1",pos[0])
                    .attr("y1", 0)
                    .attr("x2", pos[0])
                    .attr("y2", 300)
            d3.select(this)
                    .append("line")
                    .attr("id","linija")
                    .style("stroke", "white")
                    .style("stroke-width", 0.2)
                    .attr("x1",0)
                    .attr("y1", pos[1])
                    .attr("x2", 300)
                    .attr("y2", pos[1])
            d3.select(this)
                    .append("line")
                    .attr("id","linija")
                    .style("stroke", "white")
                    .style("stroke-width", 0.2)
                    .attr("x1",pos[0])
                    .attr("y1", pos[1])
                    .attr("x2",pos[0] + 10)
                    .attr("y2", pos[1] - 10)
        var kCurrent = math.round(((pos[0] / 200 * (kRate[1]-kRate[0])) + kRate[0]),4)
        var fCurrent = math.round(((pos[1] / 200 * (fRate[0]-fRate[1])) + fRate[1]),4)
            d3.select(this)
                    .append("text")
                    .attr("class","kordinate")
                    .attr("x",pos[0] + 10)
                    .attr("y", pos[1] - 10)
                    .attr("fill","white")
                    .attr("font-size","10px")
                    .text(kCurrent +", "+fCurrent)
        })
Axes.on("click", function(){
            kfmap = [];
            let pos = d3.mouse(this);
            d3.selectAll("#kfpika").remove();
            d3.select(this)
                .append("circle")
                .attr("id","kfpika")
                .attr("cx",pos[0])
                .attr("cy",pos[1])
                .attr("r","2px")
                .attr("fill","white");
            kfmap.push(pos[0], pos[1]);
        var kValue = math.round(((kfmap[0] / 200 * (kRate[1]-kRate[0])) + kRate[0]),7)
        var fValue = math.round(((kfmap[1] / 200 * (fRate[0]-fRate[1])) + fRate[1]),7)
            kfmap = [];
            kfmap.push(kValue, fValue);
        })




